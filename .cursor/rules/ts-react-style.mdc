---
globs: *.ts,*.tsx
---

# Стиль и практики для TypeScript/React

Общее

- Всегда используйте явные проп-типизации для компонентов и экспортируемых функций
- Не используйте any; предпочитайте точные типы и дженерики
- Именование: функции — глаголы, переменные — осмысленные существительные

Компоненты

- Функциональные компоненты с явными проп-типами: `type Props = { ... }`
- Внутренний UI-стейт в компоненте; бизнес-стейт — в Zustand сторах
- Хуки: побочные эффекты в `useEffect`, мемоизация в `useMemo`/`useCallback`

Загрузка данных

- Вызовы API из сервисов [src/lib](mdc:src/lib) или стора; не из компонентов страниц напрямую
- Обрабатывайте ошибки и состояния загрузки; показывайте `LoadingSpinner` из [src/components/ui/LoadingSpinner.tsx](mdc:src/components/ui/LoadingSpinner.tsx)

UI/стили

- Tailwind классы и Shadcn UI компоненты из [src/components/ui](mdc:src/components/ui)
- Не инлайньте большие блоки стилей; выносите в классы/утилиты

Маршрутизация

- Используйте React Router v6; маршруты настраивайте в [src/routes/index.tsx](mdc:src/routes/index.tsx)

Тестируемость и поддерживаемость

- Избегайте глубокой вложенности; применяйте ранние возвраты
- Выделяйте утилиты и повторяемую логику в отдельные функции/хуки
